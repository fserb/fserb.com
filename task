#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

function watch {
  lume --watch "$@"
}

function build {
  lume "$@"
}

function update-deps {
  udd _config.js _plugins/*.js
}

function sync {
  lume "$@"
  rsync -a --partial --progress _site/ fserb.com:fserb/
}

function optimize-images {
  MAX_WIDTH=1440
  MIN_WIDTH=720

  while IFS= read -r file; do
    width=$(identify -format "%w" "$file")

    if (( width > MAX_WIDTH )); then
      echo "$file: Too big. Resizing."
      convert "$file" -resize $MAX_WIDTH "$file"
    elif (( width < MIN_WIDTH )); then
      echo "$file: too small."
    fi

    if [[ "$file" == *.png ]]; then
      echo "$file: Optimizing."
      optipng -o9 "$file"
    fi

    # run jpegoptim for jpegs
    if [[ "$file" == *.jpg ]]; then
      echo "$file: Optimizing."
      jpegoptim -o --strip-all --all-progressive -v "$file"
    fi

  done < <(find . \
    -type d \( -name "_site" -o -name "old" -o -name "orig" \) -prune \
    -o \( -type f \( -iname "*.png" -o -iname "*.jpg" \) -print \))
}

function help {
  echo "$0 <task> <args>"
  echo "Tasks:"
  compgen -A function | grep -v "^_" | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time "${@:-help}"
